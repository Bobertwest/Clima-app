{"version":3,"sources":["Imagenes/Soleado.jpg","Formulario.jsx","Spinner.jsx","App.jsx","index.js"],"names":["Formulario","props","clima","setClima","error","getWeather","handleChange","e","target","name","value","className","onSubmit","type","autoComplete","required","onChange","htmlFor","id","Spinner","App","useState","climaActual","setClimaActual","load","setLoad","setError","noCity","setNoCity","ciudad","pais","apiRequest","a","url","fetch","weatherRequest","json","weatherResponse","cod","Ciudad","Templeratura","parseFloat","parseInt","main","temp","toFixed","Max","temp_max","min","temp_min","icon","weather","getName","sys","country","preventDefault","trim","src","fondo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbeaa771.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Soleado.20e98a68.jpg\";","import React from \"react\";\r\nimport \"../src/Styles/formulario.css\";\r\n\r\nconst Formulario = (props) => {\r\n  const { clima, setClima, error, getWeather } = props;\r\n\r\n  const handleChange = (e) => {\r\n    setClima({\r\n      ...clima,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"formulario\" onSubmit={getWeather}>\r\n      <div className=\"ciudadContainer\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"ciudad\"\r\n          className=\"ciudadInput\"\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <label htmlFor=\"city\" className=\"labelCity\">\r\n          <span>Ciudad</span>\r\n        </label>\r\n      </div>\r\n      <select name=\"pais\" id=\"\" className=\"paisesInput\" onChange={handleChange}>\r\n        <option value=\"\"> --País-- </option>\r\n        <option value=\"PA\">Panama</option>\r\n        <option value=\"US\">Estados Unidos</option>\r\n        <option value=\"PE\">Peru</option>\r\n        <option value=\"CR\">Costa Rica</option>\r\n        <option value=\"MX\">Mexico</option>\r\n      </select>\r\n      {error && (\r\n        <p className=\"errorMessage\">Todos los campos son obligatorios</p>\r\n      )}\r\n      <input type=\"submit\" value=\"Ver clima\" className=\"boton\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport \"../src/Styles/spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"double-bounce1\"></div>\r\n      <div className=\"double-bounce2\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Fragment, useState } from \"react\";\nimport { getName } from \"country-list\";\nimport { TiWeatherSunny } from \"react-icons/ti\";\nimport fondo from \"../src/Imagenes/Soleado.jpg\";\nimport \"../src/Styles/App.css\";\nimport Formulario from \"./Formulario\";\nimport Spinner from \"./Spinner\";\n\nfunction App() {\n  const [climaActual, setClimaActual] = useState(null);\n  const [load, setLoad] = useState(false);\n  const [error, setError] = useState(false);\n  const [noCity, setNoCity] = useState(false);\n  const [clima, setClima] = useState({\n    ciudad: \"\",\n    pais: \"\",\n  });\n\n  const { ciudad, pais } = clima;\n\n  const apiRequest = async () => {\n    setNoCity(false);\n    setLoad(true);\n    const api = \"f1db9c38f1abba224e617221986060e0\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${api}`;\n\n    const weatherRequest = await fetch(url);\n    const weatherResponse = await weatherRequest.json();\n    if (weatherResponse.cod === \"404\") {\n      setNoCity(true);\n      setLoad(false);\n    } else {\n      setClimaActual({\n        Ciudad: weatherResponse.name,\n        Templeratura: parseFloat(\n          parseInt(weatherResponse.main.temp) - 273.15\n        ).toFixed(1),\n        Max: parseFloat(\n          parseInt(weatherResponse.main.temp_max) - 273.15\n        ).toFixed(1),\n        min: parseFloat(\n          parseInt(weatherResponse.main.temp_min) - 273.15\n        ).toFixed(1),\n        icon: weatherResponse.weather[0].icon,\n        pais: getName(weatherResponse.sys.country),\n      });\n      setLoad(false);\n    }\n  };\n\n  const getWeather = (e) => {\n    e.preventDefault();\n    if (ciudad.trim() === \"\" || pais.trim() === \"\") {\n      setError(true);\n      return;\n    } else {\n      setError(false);\n      apiRequest();\n      return;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <img src={fondo} alt=\"Fondo de pantalla\" className=\"fondoDePantalla\" />\n      <div className=\"containerMain\">\n        <div className=\"contanadorExteriorDeFormulario\">\n          <Formulario\n            clima={clima}\n            setClima={setClima}\n            error={error}\n            setError={setError}\n            getWeather={getWeather}\n          />\n        </div>\n        <div className=\"informacion\">\n          {load ? (\n            <Spinner />\n          ) : (\n            <Fragment>\n              {noCity && (\n                <p className=\"errorCiudad\">No se encontro la ciudad</p>\n              )}\n              {climaActual !== null ? (\n                <Fragment>\n                  <h4 className=\"lugar\">\n                    {climaActual.Ciudad} - {climaActual.pais}\n                  </h4>\n                  <h1 className=\"climaActual\">{climaActual.Templeratura}°C</h1>\n                  <img\n                    src={`http://openweathermap.org/img/w/${climaActual.icon}.png`}\n                    alt=\"\"\n                  />\n                  <div className=\"temps\">\n                    <p>Max: {climaActual.Max}°C</p>\n                    <p>Min: {climaActual.min}°C</p>\n                  </div>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <h4 className=\"lugar\">Ciudad - País</h4>\n                  <TiWeatherSunny className=\"iconoClima\" />\n                  <div className=\"temps\">\n                    <p>Max</p>\n                    <p>Min</p>\n                  </div>\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n          <div className=\"contanadorInteriorDeFormulario\">\n            <Formulario\n              clima={clima}\n              setClima={setClima}\n              error={error}\n              setError={setError}\n              getWeather={getWeather}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}